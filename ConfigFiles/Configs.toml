[General]
  Geometry= "cube" # Geometry of detector. Options are {"flat","cube"}  
  RABinnings= 500 #binnings on skymap fro source and background
  ALTBinnings= 500
  output_directory = "/nevis/milne/files/ms6556/BleekerData/test"
  MC_truth = true # flag to denote if Reconstruct ...
  scale = "linear" # What scale the binnings should be. Options are {"linear","log"}
  local_run = false # Run code locally instead of on condor

[EffectiveArea.gramssky]
# Read in by Effective Area condor job and CalcEffArea

# Defaults. These shouldn't be changed by user.
# -o gramssky.hepmc3
# PositionGeneration Iso
# --PhiMinMax \"(-3.14159,3.14159)\" --ThetaMinMax \"(-1.57079,1.57079)\"
# --OriginSphere depends on Geometry. Cube is \"(0,0,-40.0 )\". Flat is  --OriginSphere \"(0,0,-10.0 )\"
    RadiusSphere = 300
    RadiusDisc = 200
    minE = 0.1 # Minimum energy to test
    maxE = 10 # Maximum energy to test
    energy_bins = 100 # Number of energy bins
    nparticles = 20000 # Number of particles to generate at each energy

[EffectiveArea.gramsg4]
# Defaults.  These shouldn't be changed by user.
# -i gramssky.hepmc3
# -o gramsg4.root
# -g {GDML} where GDML is dependent on Geometry. ThinGrams.gdml for 'cube', ThinFlatGrams.gdml for 'flat'
# -m {MAC} where {MAC} is ./mac/EffAreaHepmc3.mac, which is a file created by GenCondorJobs

[EffectiveArea.gramsdetsim]
# Defaults
# -i gramssky.root
# -o gramsdetsim.root

[EffectiveArea.Extract]
# Defaults
# --GramsG4Name gramsg4.root
# --GramsDetSimName gramsdetsim.root
    ExtractOutput = "EffectiveAreaExtract"

[EffectiveArea.Reconstruct]
# Defaults
# -i ExtractOutput key in Extract
    ReconstructOutput = "EffectiveAreaReconstruction" # _${process}.root gets appended to this string

[Source]
  SourceEnergy = 1.0 # Energy of Source
  SourceEventsPerJob = 10000 # Number of Source events per job
  SourceBatches = 1000 # Number of jobs to generate with source
  RASourceLoc = 0.0 # Location of source in Right Ascension in degrees (xy plane)
  ALTSourceLoc = 0.0 # Loocation of source in Altitude in degrees (moving up from xy plane)

[Source.gramssky]
# Defaults
# --PositionGeneration Point
# --PointSource calculated from RA and ALT locations
# -o uses Events.hepmc3
# --RadiusSphere 300
# --RadiusDisc 200
# OriginSphere from Geometry
# --EnergyGeneration Fixed

[Source.gramsg4]
# Defaults
# -o is default
# -g dependent on geometry
# -i is gramssky.hepmc3
# -m dependent on number of particle generated

[Source.gramsdetsim]
# -i is default gramsg4
# -o is default gramsdetsim

[Source.Extract]
# GramsG4Name is default
# GramsDetSimName is default
  ExtractOutput = "SourceExtract"

[Source.Reconstruct]
# Defaults
#input is output of Extract
# SourceType is Point
# SourceLoc is from RA and ALT
  ReconstructOutput = "SourceReconstruct" # _${process}.root gets appended to this string

[Source.SkyMap]
#  Input is output of Reconstruct
# EffAreaFile from CalcEffArea.py
# Mask from mask
    SkyMapOutput = "SourceSkyMap" # _${process}.root gets appended to this string

[Background]
  BackgroundEventsPerJob = 10000 # Number of Background events per job
  BackgroundBatches = 10 # Number of jobs to generate with source

[Background.gramssky]
# Defaults
# default output GramsG4Name
# RadiusSphere 300
# PositionGeneration Iso
#--PhiMinMax "(-3.14159,3.14159)" --ThetaMinMax "(0,3.14159265)"
# OriginSphere from Geometry
  Spectrum = "PowerLaw" # Energy generation type. {"PowerLaw","Uniform"}

# Energy in MeV
    minE  = 0.1
    maxE  = 10 

[Background.gramsg4]
# output is default
# input is gramssky.hepmc3
# m is hepmc3 macro

[Background.gramsdetsim]
# output default
# input default gramsg4

[Background.Extract]
# GramsG4Name is default
# GramsDetSimName is default
  ExtractOutput = "BackgroundExtract"

[Background.Reconstruct]
# Defaults
#input is output of Extract
# SourceType is Iso
  ReconstructOutput = "BackgroundReconstruction" # _${process}.root gets appended to this string

[Background.SkyMap]
# EffAreaFile from CalcEffArea.py
# Flux files created with GenEnergySpectrum
    SkyMapOutput = "BackgroundSkyMap" # _${process}.root gets appended to this string
    ExposureTime = 86400 # In seconds
[Mask]
# Defaults
# RA and ALT locations from Source
# Same binnings as in General
# Calcuates BinaryMask and applies to all skymaps. 
#Generate pipeline with monoenergetic data pipeline of own
  nevents = 10000 # Number of Source events per job
  nbins =  1000 # Number of binnings in ARM distribution
  MaskOutput = "BinaryMask.root"
  draw = true

[CalcEffArea]
# Get parameters from EffArea
  OutputFileName = "EffectiveArea.root"
  
[Sensitivity]
  TimeScaling = 1.0 # How much to scale up/down the exposure time